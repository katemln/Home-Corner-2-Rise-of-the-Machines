@using Microsoft.AspNet.Identity
@model HomeCorner2.ViewModels.HousesViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_LoggedInLayout.cshtml";
}

<div class="row mt-5">
    <div class="col-lg-9">
        <div class="row">
            <img class="rounded image-details" src="..\..\HouseImages\@Model.House.ImageName" alt="@Model.House.Title" />
        </div>
        <div class="row mt-3">
            <div class="img-thumbnail" id="googleMap" style="width:90%;height:360px;"></div>
        </div>
    </div>
    <div class="col-lg-3">
        <h4>@Html.DisplayFor(model => model.House.Title)</h4>
        <hr />
        <dl class="dl-horizontal">
            @*@Html.Partial("_HousesDataTable", Model.House)*@
            <dt>
                Address
            </dt>
            <dd>
                @Html.DisplayFor(model => model.House.Region.RegionName), @Html.DisplayFor(model => model.House.PostalCode)
                <br />
                @Html.DisplayFor(model => model.House.Address) @Html.DisplayFor(model => model.House.AddressNumber),
            </dd>
            <dt>
                Maximum Occupancy
            </dt>
            <dd>
                @Html.DisplayFor(model => model.House.Occupancy)
                @if (Model.House.Occupancy <= 1)
                {
                    <span>Person</span>
                }
                else
                {
                    <span>People</span>
                }
            </dd>
            <dt>
                Price/Night
            </dt>
            <dd>
                @Html.DisplayFor(model => model.House.Price)€
            </dd>
            <dt>
                Extra Features
            </dt>
            @if (Model.SelectedFeatures == null)
            {
                <dd>No Features</dd>
            }
            else
            {
                foreach (var feature in Model.House.Features)
                {
                    <dd>
                        @Html.DisplayFor(model => feature.Feature)
                    </dd>
                }
            }
            <dt>
                Description
            </dt>
            <dd>
                @Html.DisplayFor(model => model.House.Description)
            </dd>
            <dt>
                Available
            </dt>
            <dd>
                <label>
                    From:
                </label> @Html.DisplayFor(model => model.House.StartDate)
            </dd>
            <dd>
                <label>
                    To:
                </label> @Html.DisplayFor(model => model.House.EndDate.Date)
            </dd>
            <dt>
                Owner's Information
            </dt>
            <dd>
                <label>Email:</label>
                @Html.DisplayFor(model => model.House.Owner.Email)
            </dd>
            <dd>
                <label>Name:</label>
                @Html.DisplayFor(model => model.House.Owner.FirstName)
                @Html.DisplayFor(model => model.House.Owner.LastName)
            </dd>

            <dt>
                @if (User.IsInRole("CanManageHouses") || Model.House.OwnerId == User.Identity.GetUserId())
                {
                    @*@Html.ActionLink("Back to List", "Index", new { @class = "btn btn-outline-light", role = "button" })*@
                    @Html.ActionLink("Edit", "Edit", new { id = Model.House.Id }, new { @class = "btn btn-sm btn-outline-secondary mr-2", role = "button" })
                    @Html.ActionLink("Reservations", "HouseReservations", new { id = Model.House.Id }, new { @class = "btn btn-sm btn-outline-primary  mr-2", role = "button" })
                    <button type="button" class="btn btn-outline-danger btn-sm show-delete-modal-button" data-url="@Url.Action("Delete", "Houses", new { id = Model.House.Id}, Request.Url.Scheme)">Delete</button>
                    @Html.ActionLink("Book Now", "Book", new { id = Model.House.Id }, new { @class = "mt-2 btn btn-sm primary-buttons btn-block", role = "button" })

                }
                else
                {
                    @*@Html.ActionLink("Back to List", "Index", new { @class = "btn btn-outline-light", role = "button" })*@
                    @Html.ActionLink("Book Now", "Book", new { id = Model.House.Id }, new { @class = "mt-2 btn primary-buttons btn-block", role = "button" })
                    @*<button class="btn btn-dark" data-toggle="modal" data-target="#reservationModal"">
                           Book Now!
                        </button>*@
                }
            </dt>

        </dl>
    </div>
</div>

<div class="container">
    <!-- The Modal -->
    <div class="modal" id="deleteHouseModal" data-url="">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Delete House</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    Are you sure about deleting this Home Corner?
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" class="btn danger-button delete-house-button">Yes</button>
                    <button type="button" class="btn btn-outline-dark" data-dismiss="modal">No</button>
                </div>

            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        function initMap() {
            var homeCornerLatLng = { lat: 40.6374681, lng: 22.9346953 };
            var map = new google.maps.Map(document.getElementById('googleMap'), {
                zoom: 6,
                center: homeCornerLatLng
            });
            var marker = new google.maps.Marker({
                position: homeCornerLatLng,
                map: map,
                animation: google.maps.Animation.DROP,
                title: 'Home Corner Offices'
            });
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=********&callback=initMap"></script>

    @functions{
        public string TokenHeaderValue()
        {
            string cookieToken, formToken;
            AntiForgery.GetTokens(null, out cookieToken, out formToken);
            return cookieToken + ":" + formToken;
        }
    }

    <script>
        var $deleteToggleButton = $('.show-delete-modal-button');
        var $deleteHouseModal = $('#deleteHouseModal');

        $(document).ready(function (event) {
            $deleteToggleButton.on('click', function(event) {
                event.preventDefault();
                $deleteHouseModal.data('url', $(this).data('url'));
                $deleteHouseModal.modal('show');
            });

            $('.delete-house-button').on('click', function (event)
    {
                event.preventDefault();

                var request = $.ajax({
                url: $deleteHouseModal.data('url'),
                    method: 'POST',
                    data:
                    {
                        '__RequestVerificationToken': '@TokenHeaderValue()'
                    },
                    dataType: 'json',

                });
                request.done(function(data, textStatus, jqXHR) {
                    if (data.Status == 'ok')
                    {
                        alert('Deleted successfully.');
                        location.replace('/Houses/MyHouses');
                    }
                    else
                    {
                        alert(data.Error);
                    }
                });
                request.fail(function(jqXHR, textStatus, errorThrown) {
                    alert('Request failed: ' + textStatus);
                });
            });
        });
    </script>
    <script>
        var $bookToggleButton = $('.show-book-modal-button');
        var $bookHouseModal = $('#bookHouseModal');

        $(document).ready(function (event) {
            $deleteToggleButton.on('click', function(event) {
                event.preventDefault();
                $bookHouseModal.data('url', $(this).data('url'));
                $bookHouseModal.modal('show');
            });

            $('.book-house-button').on('click', function (event)
    {
                event.preventDefault();

                var request = $.ajax({
                    url: $bookHouseModal.data('url'),
                    method: 'POST',
                    data:
                    {
                        '__RequestVerificationToken': '@TokenHeaderValue()'
                    },
                    dataType: 'json',

                });
                request.done(function(data, textStatus, jqXHR) {
                    if (data.Status == 'ok')
                    {
                        alert('Deleted successfully.');
                        location.replace('/Houses/MyReservations');
                    }
                    else
                    {
                        alert(data.Error);
                    }
                });
                request.fail(function(jqXHR, textStatus, errorThrown) {
                    alert('Request failed: ' + textStatus);
                });
            });
        });
    </script>
}