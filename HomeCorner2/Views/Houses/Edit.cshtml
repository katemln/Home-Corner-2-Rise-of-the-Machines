@model HomeCorner2.ViewModels.HousesViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LoggedInLayout.cshtml";
}

@using (Html.BeginForm("Edit", "Houses", FormMethod.Post, new
{
    enctype = "multipart/form-data"
}))
{
    @Html.AntiForgeryToken()

<div class="row mt-5">
    <div class="col-lg-8">
        <img class="rounded img-thumbnail edit-image" src="..\..\HouseImages\@Model.House.ImageName" alt="@Model.House.Title" />
    </div>
    <div class="col-lg-4">
        <h4>Editing House</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.House.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.House.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.House.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.House.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.House.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.House.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.House.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.House.RegionId, "Regions", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.House.RegionId, (SelectList)ViewBag.RegionId, "Select Region", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.House.RegionId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.House.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.House.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.House.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.House.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.House.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.House.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.House.AddressNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.House.AddressNumber, new { htmlAttributes = new { placeholder = "Please enter the address", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.House.AddressNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.House.Occupancy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.House.Occupancy, new { htmlAttributes = new { @class = "form-control", } })
                @Html.ValidationMessageFor(model => model.House.Occupancy, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.House.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.House.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.House.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Availabilty</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.House.StartDate, new { htmlAttributes = new { placeholder = "From", @class = "form-control", id = "editStartDate" } })
                @Html.ValidationMessageFor(model => model.House.StartDate, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-10 mt-2">
                @Html.EditorFor(model => model.House.EndDate, new { htmlAttributes = new { placeholder = "To", @class = "form-control", id = "editEndDate" } })
                @Html.ValidationMessageFor(model => model.House.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.AllFeatures, "Features", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(m => m.SelectedFeatures, (IEnumerable<SelectListItem>)ViewBag.AllFeatures, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.House.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.House.ImageData, "", new { @type = "file", id = "file", name = "file" })
                @Html.ValidationMessageFor(model => model.House.ImageData, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            @Html.ActionLink("Back to List", "Index") |

            <button type="submit" class="btn btn-primary">Save</button>

        </div>
    </div>
    </div>
}





    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/bootstrap")

        <script src="https://cdn.jsdelivr.net/npm/gijgo@1.9.6/js/gijgo.min.js" type="text/javascript"></script>
        <script>
            var today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());
            $('#editStartDate').datepicker({
                uiLibrary: 'bootstrap4',
                iconsLibrary: 'fontawesome',
                format: 'dd-mm-yyyy',
                minDate: today,
                maxDate: function () {
                    return $('#EndDate').val();
                }
            });
            $('#editEndDate').datepicker({
                uiLibrary: 'bootstrap4',
                iconsLibrary: 'fontawesome',
                format: 'dd-mm-yyyy',
                minDate: function () {
                    return $('#StartDate').val();
                }
            });
        </script>
    }
