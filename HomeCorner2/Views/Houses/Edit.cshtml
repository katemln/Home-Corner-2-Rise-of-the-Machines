@model HomeCorner2.ViewModels.HousesViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LoggedInLayout.cshtml";
}

@using (Html.BeginForm("Edit", "Houses", FormMethod.Post, new
{
    enctype = "multipart/form-data"
}))
{
    @Html.AntiForgeryToken()

    <div class="row mt-5">
        <div class="col-lg-8">
            <img class="rounded img-thumbnail edit-image" src="..\..\HouseImages\@Model.House.ImageName" alt="@Model.House.Title" />
        </div>
        <div class="container col-lg-4 mt-5">
            @*<div class="img-thumbnail" id="googleMap" style="width:100%;height:400px;"></div>*@
        </div>

    </div>
    <div class="row mt-5 ml-3">
        <h3>Editing House</h3>
    </div>
    <hr />
    <div class="row">
        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-10 col-10">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.House.Id)
            @Html.HiddenFor(model => model.House.OwnerId)
            <div class="form-group">
                @Html.LabelFor(model => model.House.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.House.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.House.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.House.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.House.Occupancy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.Occupancy, new { htmlAttributes = new { @class = "form-control", } })
                    @Html.ValidationMessageFor(model => model.House.Occupancy, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.House.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.House.Price, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-10 col-10">
            <div class="form-group">
                @Html.LabelFor(model => model.House.RegionId, "Regions", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.House.RegionId, (SelectList)ViewBag.RegionId, "Select Region", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.House.RegionId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2 display-inline">Postal Code</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.PostalCode, new { htmlAttributes = new { @class = "form-control mt-2" } })
                    @Html.ValidationMessageFor(model => model.House.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.House.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.House.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2 display-inline">Address Number</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.AddressNumber, new { htmlAttributes = new { id = "address-number", placeholder = "Please enter the address", @class = "form-control mt-2" } })
                    @Html.ValidationMessageFor(model => model.House.AddressNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-10 col-10">

            <div class="form-group">
                <label class="control-label col-md-2">Availabilty</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.StartDate, new { htmlAttributes = new { placeholder = "From", @class = "form-control", id = "editStartDate" } })
                    @Html.ValidationMessageFor(model => model.House.StartDate, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-10 mt-2">
                    @Html.EditorFor(model => model.House.EndDate, new { htmlAttributes = new { placeholder = "To", @class = "form-control", id = "editEndDate" } })
                    @Html.ValidationMessageFor(model => model.House.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Image</label>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.House.ImageData, "", new { @type = "file", id = "file", name = "file" })
                    @Html.ValidationMessageFor(model => model.House.ImageData, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.AllFeatures, "Features", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ListBoxFor(m => m.SelectedFeatures, (IEnumerable<SelectListItem>)ViewBag.AllFeatures, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="row d-flex justify-content-center">
        <div class="col-lg-10 col-md-10">
            <button type="submit" class="btn btn-outline-primary btn-block">Save changes</button>
        </div>
    </div>
    @*<div class="row">
            <div class="col-lg-10 col-md-10 d-flex justify-content-center">
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>*@
}





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")

    <script src="https://cdn.jsdelivr.net/npm/gijgo@1.9.6/js/gijgo.min.js" type="text/javascript"></script>
    <script>
        var today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());
        $('#editStartDate').datepicker({
            uiLibrary: 'bootstrap4',
            iconsLibrary: 'fontawesome',
            format: 'dd-mm-yyyy',
            minDate: today,
            maxDate: function () {
                return $('#EndDate').val();
            }
        });
        $('#editEndDate').datepicker({
            uiLibrary: 'bootstrap4',
            iconsLibrary: 'fontawesome',
            format: 'dd-mm-yyyy',
            minDate: function () {
                return $('#StartDate').val();
            }
        });
    </script>
    <script>
        function initMap() {
            var homeCornerLatLng = { lat: 40.6374681, lng: 22.9346953 };
            var map = new google.maps.Map(document.getElementById('googleMap'), {
                zoom: 6,
                center: homeCornerLatLng
            });
            var marker = new google.maps.Marker({
                position: homeCornerLatLng,
                map: map,
                animation: google.maps.Animation.DROP,
                title: 'Home Corner Offices'
            });
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=********&callback=initMap"></script>
}
