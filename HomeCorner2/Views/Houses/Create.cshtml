@model HomeCorner2.ViewModels.HousesViewModel
@{
    /**/

    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LoggedInLayout.cshtml";

}

<hr />
@using (Html.BeginForm("Create", "Houses", FormMethod.Post, new
{
    enctype = "multipart/form-data"
}))
{
    @Html.AntiForgeryToken()

    //<div class="form-horizontal">
    <h4>New Home Corner</h4>
    <hr />
    <div class=" row">
        <div class="col-xl-6 col-lg-6 col-md-6 col-sm-10 col-10">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @*@Html.LabelFor(model => model.House.OwnerId, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.House.OwnerId, new { htmlAttributes = new { @class = "form-control" } })*@
                    @*@Html.ValidationMessageFor(model => model.House.OwnerId, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.House.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.Title, new { htmlAttributes = new { placeholder = "Please enter a title", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.House.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.House.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.Description, new { htmlAttributes = new { placeholder = "Please enter a description", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.House.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.House.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.Price, new { htmlAttributes = new { placeholder = "Please enter the price/night", @class = "form-control", } })
                    @Html.ValidationMessageFor(model => model.House.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.House.Occupancy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.Occupancy, new { htmlAttributes = new { placeholder = "Please enter the max occupancy", @class = "form-control", } })
                    @Html.ValidationMessageFor(model => model.House.Occupancy, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Availabilty</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.StartDate, new { htmlAttributes = new { placeholder = "From", @class = "form-control", id = "StartDate" } })
                    @Html.ValidationMessageFor(model => model.House.StartDate, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-10 mt-2">
                    @Html.EditorFor(model => model.House.EndDate, new { htmlAttributes = new { placeholder = "To", @class = "form-control", id = "EndDate" } })
                    @Html.ValidationMessageFor(model => model.House.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-xl-6 col-lg-6 col-md-6 col-sm-10 col-10">
            <div class="form-group">
                @Html.LabelFor(model => model.House.RegionId, "Regions", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.House.RegionId, (SelectList)ViewBag.RegionId, "Select Region", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.House.RegionId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2 display-inline">Postal Code</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.PostalCode, new { htmlAttributes = new { placeholder = "Please enter the postal code", @class = "form-control mt-2" } })
                    @Html.ValidationMessageFor(model => model.House.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.House.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.Address, new { htmlAttributes = new { placeholder = "Please enter the address", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.House.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2 display-inline">Address Number</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.House.AddressNumber, new { htmlAttributes = new { placeholder = "Please enter the address", @class = "form-control mt-2" } })
                    @Html.ValidationMessageFor(model => model.House.AddressNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.AllFeatures, "Features", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ListBoxFor(m => m.SelectedFeatures, (IEnumerable<SelectListItem>)ViewBag.AllFeatures, new { @class = " form-control my-select", multiple = "multiple" })
                </div>
            </div>

        </div>
        <div class="form-group">
            <label class="control-label col-md-2 display-inline">Image</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.House.ImageData, "Image", new { @type = "file", id = "file", name = "file" })
                @Html.ValidationMessageFor(model => model.House.ImageData, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row form-group">
        <div class="col-lg-10 col-md-10">
            <button type="submit" class="btn button-custom-color btn-block" id="submit-create-house">Add</button>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="https://cdn.jsdelivr.net/npm/gijgo@1.9.6/js/gijgo.min.js" type="text/javascript"></script>
    <script>
        var today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());
        $('#StartDate').datepicker({
            uiLibrary: 'bootstrap4',
            iconsLibrary: 'fontawesome',
            //format: 'dd-mm-yyyy',
            minDate: today,
            maxDate: function () {
                return $('#EndDate').val();
            }
        });
        $('#EndDate').datepicker({
            uiLibrary: 'bootstrap4',
            iconsLibrary: 'fontawesome',
            //format: 'dd-mm-yyyy',
            minDate: function () {
                return $('#StartDate').val();
            }
        });
    </script>
}
